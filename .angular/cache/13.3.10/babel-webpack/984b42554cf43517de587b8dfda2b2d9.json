{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { HttpGetPayload, HttpPutPayload, HttpPostPayload, HttpDeletePayload } from './http.models';\nimport { ErrorActions } from '../errors/errors.actions';\nimport { inArray } from '../shared/utils';\nexport var HttpActions = /*#__PURE__*/(function () {\n  var HttpActions = /*#__PURE__*/function () {\n    function HttpActions() {\n      _classCallCheck(this, HttpActions);\n    }\n\n    _createClass(HttpActions, null, [{\n      key: \"addPath\",\n      value: function addPath(path, target) {\n        var existingMatches = target['matches'] || [];\n        var matches = inArray(existingMatches, path) ? existingMatches : [].concat(_toConsumableArray(existingMatches), [path]);\n        return Object.assign(target, {\n          matches: matches\n        });\n      }\n    }, {\n      key: \"matchPath\",\n      value: function matchPath(path, payload) {\n        if (payload && payload['results']) {\n          return Object.assign(payload, {\n            results: HttpActions.matchPath(path, payload['results'])\n          });\n        }\n\n        if (Array.isArray(payload)) {\n          return payload.map(function (x) {\n            return HttpActions.addPath(path, x);\n          });\n        }\n\n        return HttpActions.addPath(path, payload);\n      }\n    }, {\n      key: \"buildError\",\n      value: function buildError(payload) {\n        return ErrorActions.add(payload);\n      }\n    }, {\n      key: \"buildErrorPayload\",\n      value: function buildErrorPayload(key, e) {\n        return {\n          key: key,\n          error: e\n        };\n      }\n    }, {\n      key: \"handleError\",\n      value: function handleError(e, onError) {\n        return {\n          type: onError,\n          payload: e\n        };\n      }\n    }, {\n      key: \"handleErrorOutlet\",\n      value: function handleErrorOutlet(e, outlet) {\n        return ErrorActions.addAtOutlet(e, outlet);\n      }\n    }, {\n      key: \"handleErrorDefault\",\n      value: function handleErrorDefault(e) {\n        return {\n          type: HttpActions.DELETE_ERROR,\n          payload: HttpActions.buildErrorPayload('lastError', e)\n        };\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(path, data, onSuccess, onError) {\n        var payload = Object.assign(new HttpDeletePayload(), {\n          path: path,\n          onSuccess: onSuccess || HttpActions.DELETE_SUCCESS,\n          data: data,\n          onError: onError || HttpActions.DELETE_ERROR\n        });\n        return HttpActions.httpDelete(payload);\n      }\n    }, {\n      key: \"httpDelete\",\n      value: function httpDelete(payload) {\n        return {\n          type: HttpActions.DELETE,\n          payload: payload\n        };\n      }\n    }, {\n      key: \"deleteSuccess\",\n      value: function deleteSuccess(model, actionType) {\n        return {\n          type: actionType || HttpActions.DELETE_SUCCESS,\n          payload: model\n        };\n      }\n    }, {\n      key: \"deleteError\",\n      value: function deleteError(e, onError) {\n        if (typeof onError === 'string') {\n          return HttpActions.handleError(e, onError);\n        } // else if (typeof onError === 'ErrorOutlet') {\n        //     return HttpActions.handleErrorOutlet(e, onError);\n        // }\n\n\n        return HttpActions.handleErrorDefault(e);\n      }\n    }, {\n      key: \"get\",\n      value: function get(path, onSuccess, onError) {\n        var payload = Object.assign(new HttpGetPayload(), {\n          path: path,\n          onSuccess: onSuccess || HttpActions.GET_SUCCESS,\n          onError: onError || HttpActions.GET_ERROR\n        });\n        return HttpActions.httpGet(payload);\n      }\n    }, {\n      key: \"httpGet\",\n      value: function httpGet(payload) {\n        return {\n          type: HttpActions.GET,\n          payload: payload\n        };\n      }\n    }, {\n      key: \"getSuccess\",\n      value: function getSuccess(response, actionType) {\n        return {\n          type: actionType || HttpActions.GET_SUCCESS,\n          payload: response\n        };\n      }\n    }, {\n      key: \"getError\",\n      value: function getError(e, onError) {\n        if (typeof onError === 'string') {\n          return HttpActions.handleError(e, onError);\n        } // else if (typeof onError === 'ErrorOutlet') {\n        //     return HttpActions.handleErrorOutlet(e, onError);\n        // }\n\n\n        return HttpActions.handleErrorDefault(e);\n      }\n    }, {\n      key: \"post\",\n      value: function post(path, model, onSuccess, onError) {\n        var payload = Object.assign(new HttpPostPayload(), {\n          path: path,\n          model: model,\n          onSuccess: onSuccess || HttpActions.POST_SUCCESS,\n          onError: onError || HttpActions.POST_ERROR\n        });\n        return HttpActions.httpPost(payload);\n      }\n    }, {\n      key: \"httpPost\",\n      value: function httpPost(payload) {\n        return {\n          type: HttpActions.POST,\n          payload: payload\n        };\n      }\n    }, {\n      key: \"postFormUrlEncoded\",\n      value: function postFormUrlEncoded(path, model, onSuccess, onError) {\n        var payload = Object.assign(new HttpPostPayload(), {\n          path: path,\n          model: model,\n          onSuccess: onSuccess || HttpActions.GET_SUCCESS,\n          onError: onError || HttpActions.GET_ERROR\n        });\n        return {\n          type: HttpActions.POST_FORM_URL_ENCODED,\n          payload: payload\n        };\n      }\n    }, {\n      key: \"postSuccess\",\n      value: function postSuccess(model, actionType) {\n        return {\n          type: actionType || HttpActions.POST_SUCCESS,\n          payload: model\n        };\n      }\n    }, {\n      key: \"postError\",\n      value: function postError(e, onError) {\n        if (typeof onError === 'string') {\n          return HttpActions.handleError(e, onError);\n        } else if (typeof onError === 'object') {\n          return HttpActions.handleErrorOutlet(e, onError);\n        }\n\n        return HttpActions.handleErrorDefault(e);\n      }\n    }, {\n      key: \"put\",\n      value: function put(path, model, onSuccess, onError) {\n        var payload = Object.assign(new HttpPutPayload(), {\n          path: path,\n          model: model,\n          onSuccess: onSuccess || HttpActions.PUT_SUCCESS,\n          onError: onError || HttpActions.PUT_ERROR\n        });\n        return HttpActions.httpPut(payload);\n      }\n    }, {\n      key: \"httpPut\",\n      value: function httpPut(payload) {\n        return {\n          type: HttpActions.PUT,\n          payload: payload\n        };\n      }\n    }, {\n      key: \"putSuccess\",\n      value: function putSuccess(model, actionType) {\n        return {\n          type: actionType || HttpActions.PUT_SUCCESS,\n          payload: model\n        };\n      }\n    }, {\n      key: \"putError\",\n      value: function putError(e, onError) {\n        if (typeof onError === 'string') {\n          return HttpActions.handleError(e, onError);\n        } // else if (typeof onError === 'ErrorOutlet') {\n        //     return HttpActions.handleErrorOutlet(e, onError);\n        // }\n\n\n        return HttpActions.handleErrorDefault(e);\n      }\n    }, {\n      key: \"search\",\n      value: function search(path, onSuccess, onError) {\n        var payload = Object.assign(new HttpGetPayload(), {\n          path: path,\n          onSuccess: onSuccess || HttpActions.SEARCH_SUCCESS,\n          onError: onError || HttpActions.SEARCH_ERROR\n        });\n        return {\n          type: HttpActions.SEARCH,\n          payload: payload\n        };\n      }\n    }, {\n      key: \"searchSuccess\",\n      value: function searchSuccess(response, actionType, path) {\n        var payload = path ? HttpActions.matchPath(path, response) : response;\n        return {\n          type: actionType || HttpActions.SEARCH_SUCCESS,\n          payload: payload\n        };\n      }\n    }]);\n\n    return HttpActions;\n  }();\n\n  HttpActions.DELETE = \"[Http] DELETE\";\n  HttpActions.DELETE_SUCCESS = \"[Http] DELETE Success\";\n  HttpActions.DELETE_ERROR = \"[Http] DELETE Error\";\n  HttpActions.GET = \"[Http] GET\";\n  HttpActions.GET_SUCCESS = \"[Http] GET Success\";\n  HttpActions.GET_ERROR = \"[Http] GET Error\";\n  HttpActions.POST = \"[Http] POST\";\n  HttpActions.POST_SUCCESS = \"[Http] POST Success\";\n  HttpActions.POST_ERROR = \"[Http] POST Error\";\n  HttpActions.POST_FORM_URL_ENCODED = \"[Http] POST Form URL Encoded\";\n  HttpActions.PUT = \"[Http] PUT\";\n  HttpActions.PUT_SUCCESS = \"[Http] PUT Success\";\n  HttpActions.PUT_ERROR = \"[Http] PUT Error\";\n  HttpActions.SEARCH = \"[Http] SEARCH\";\n  HttpActions.SEARCH_SUCCESS = \"[Http] SEARCH Success\";\n  HttpActions.SEARCH_ERROR = \"[Http] SEARCH Error\";\n  return HttpActions;\n})();","map":null,"metadata":{},"sourceType":"module"}