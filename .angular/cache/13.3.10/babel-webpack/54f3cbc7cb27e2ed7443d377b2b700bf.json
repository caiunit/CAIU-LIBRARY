{"ast":null,"code":"import { WindowActions, ConfigActions, SidenavActions, FormActions, RedirectActions, ViewSettingsActions } from './actions';\nimport { Redirects, ViewSettings } from './models';\nimport { Config } from '../shared/config';\nimport { build } from '../shared/utils';\nimport { Window } from '../shared/window';\nexport function configReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Config();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ConfigActions.INITIALIZE:\n      return build(Config, state, action.payload);\n\n    default:\n      return state;\n  }\n}\nexport function formReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FormActions.SAVE:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\nexport function redirectsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Redirects();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RedirectActions.ADD:\n      return state.add(action.payload);\n\n    case RedirectActions.UPDATE:\n      return state.update(action.payload);\n\n    case RedirectActions.REMOVE:\n      return state.remove(action.payload);\n\n    default:\n      return state;\n  }\n}\nexport function sidenavReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SidenavActions.CLOSE:\n      return false;\n\n    case SidenavActions.OPEN:\n      return true;\n\n    case SidenavActions.TOGGLE:\n      return !state;\n\n    default:\n      return state;\n  }\n}\nexport function viewSettingsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new ViewSettings();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ViewSettingsActions.CHANGETHEME:\n      return build(ViewSettings, {\n        theme: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\nexport function windowReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Window();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case WindowActions.RESIZE:\n      return build(Window, state, action.payload);\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}