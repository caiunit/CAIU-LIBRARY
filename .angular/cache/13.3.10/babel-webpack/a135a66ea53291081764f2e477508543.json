{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _defineProperty from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\defineProperty.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { build, toArray } from '../shared/utils';\nexport var Lookup = /*#__PURE__*/function () {\n  function Lookup() {\n    _classCallCheck(this, Lookup);\n\n    this.typeName = '';\n    this.values = [];\n    this._key = '';\n  }\n\n  _createClass(Lookup, [{\n    key: \"key\",\n    get: function get() {\n      return this._key || this.typeName;\n    },\n    set: function set(value) {\n      this._key = value;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this.key;\n    },\n    set: function set(value) {\n      this.key = value;\n    }\n  }, {\n    key: \"names\",\n    get: function get() {\n      return this.values.map(function (x) {\n        return x.name;\n      });\n    }\n  }]);\n\n  return Lookup;\n}();\nexport var LookupValue = /*#__PURE__*/function () {\n  function LookupValue() {\n    _classCallCheck(this, LookupValue);\n\n    this.id = 0;\n    this.active = true;\n    this.description = '';\n    this.name = '';\n    this.sort = 0;\n    this.tooltip = ''; // use this for accessibility and/or help tooltip messages\n\n    this._label = '';\n  }\n\n  _createClass(LookupValue, [{\n    key: \"value\",\n    get: function get() {\n      return this._value || this.id;\n    },\n    set: function set(value) {\n      this._value = value;\n    }\n  }, {\n    key: \"label\",\n    get: function get() {\n      return this._label || this.description;\n    },\n    set: function set(value) {\n      this._label = value;\n    }\n  }]);\n\n  return LookupValue;\n}();\nexport var Lookups = /*#__PURE__*/function () {\n  function Lookups() {\n    _classCallCheck(this, Lookups);\n  }\n\n  _createClass(Lookups, null, [{\n    key: \"AddLookups\",\n    value: function AddLookups(state, lookups) {\n      return lookups.reduce(function (acc, lookup) {\n        return build(Lookups, acc, _defineProperty({}, lookup.key, build(Lookup, lookup)));\n      }, state);\n    }\n  }, {\n    key: \"AddLookup\",\n    value: function AddLookup(state, lookup) {\n      return build(Lookups, state, _defineProperty({}, lookup.key, build(Lookup, lookup)));\n    }\n  }, {\n    key: \"BuildLookupValues\",\n    value: function BuildLookupValues(values, names) {\n      return names.reduce(function (acc, name) {\n        var value = values.find(function (x) {\n          return x.name === name;\n        });\n        return value ? [].concat(_toConsumableArray(acc), [value]) : _toConsumableArray(acc);\n      }, []);\n    }\n  }, {\n    key: \"FindLookupIdByName\",\n    value: function FindLookupIdByName(values, name) {\n      var lkp = build(LookupValue, values.find(function (x) {\n        return x.name === name;\n      }));\n      return lkp.id;\n    }\n  }, {\n    key: \"FindLookupNameById\",\n    value: function FindLookupNameById(values, id) {\n      var lkp = build(LookupValue, values.find(function (x) {\n        return x.id === id;\n      }));\n      return lkp.name;\n    }\n  }, {\n    key: \"RemoveLookup\",\n    value: function RemoveLookup(state, removeKey) {\n      var newState = new Lookups();\n      var keys = Object.keys(state).filter(function (key) {\n        return key !== removeKey;\n      });\n      keys.forEach(function (key) {\n        newState[key] = Object.assign({}, state[key]);\n      });\n      return newState;\n    }\n  }, {\n    key: \"RemoveLookupValue\",\n    value: function RemoveLookupValue(state, lookupKey, lookupValueId) {\n      var values = toArray(build(Lookup, state[lookupKey]).values).filter(function (x) {\n        return x.id !== lookupValueId;\n      });\n      var lookup = build(Lookup, state[lookupKey], {\n        values: values\n      });\n      return build(Lookups, state, _defineProperty({}, lookupKey, lookup));\n    }\n  }, {\n    key: \"UpdateLookupValue\",\n    value: function UpdateLookupValue(state, lookupKey, lookupValue) {\n      var values = [].concat(_toConsumableArray(toArray(build(Lookup, state[lookupKey]).values).filter(function (x) {\n        return x.id !== lookupValue.id;\n      })), [lookupValue]);\n      var lookup = build(Lookup, state[lookupKey], {\n        values: values\n      });\n      return build(Lookups, state, _defineProperty({}, lookupKey, lookup));\n    }\n  }]);\n\n  return Lookups;\n}();\nexport var AddLookupPayload = /*#__PURE__*/_createClass(function AddLookupPayload() {\n  _classCallCheck(this, AddLookupPayload);\n\n  this.key = '';\n});","map":null,"metadata":{},"sourceType":"module"}