{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Actions, Effect } from '@ngrx/effects';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nexport var StreamActions = /*#__PURE__*/(function () {\n  var StreamActions = /*#__PURE__*/function () {\n    function StreamActions() {\n      _classCallCheck(this, StreamActions);\n    }\n\n    _createClass(StreamActions, null, [{\n      key: \"update\",\n      value: function update(payload) {\n        return {\n          type: StreamActions.UPDATE,\n          payload: payload\n        };\n      }\n    }]);\n\n    return StreamActions;\n  }();\n\n  StreamActions.UPDATE = '[Stream] UPDATE';\n  return StreamActions;\n})();\nexport function actionsStreamReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case StreamActions.UPDATE:\n      return {\n        type: action.payload.type,\n        payload: action.payload.payload\n      };\n\n    default:\n      return state;\n  }\n}\nexport var ActionsEffects = /*#__PURE__*/_createClass(function ActionsEffects(actions$) {\n  _classCallCheck(this, ActionsEffects);\n\n  this.actions$ = actions$;\n  /**\r\n   * Update actions store with latest action\r\n   */\n\n  this.onAction = this.actions$.pipe(filter(function (action) {\n    return action.type !== StreamActions.UPDATE;\n  }), map(function (action) {\n    return StreamActions.update(action);\n  }));\n});\n\nActionsEffects.ɵfac = function ActionsEffects_Factory(t) {\n  return new (t || ActionsEffects)(i0.ɵɵinject(i1.Actions));\n};\n\nActionsEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ActionsEffects,\n  factory: ActionsEffects.ɵfac\n});\n\n__decorate([Effect(), __metadata(\"design:type\", Observable)], ActionsEffects.prototype, \"onAction\", void 0);\n\nexport function actionsStreamSelector(store) {\n  return store.select('actions');\n}","map":null,"metadata":{},"sourceType":"module"}