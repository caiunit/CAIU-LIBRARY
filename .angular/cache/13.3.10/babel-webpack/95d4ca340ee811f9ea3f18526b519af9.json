{"ast":null,"code":"import { EventActions, MessagesActions } from './events.actions';\nimport { Events, Messages } from './events.models';\nexport function eventsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Events();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case EventActions.ADD_EVENT:\n      return state.addEvent(action.payload);\n\n    case EventActions.REMOVE_EVENT:\n      return state.removeEvent(action.payload);\n\n    case EventActions.TRIGGER_EVENT:\n      return state.triggerEvent(action.payload);\n\n    case EventActions.UPDATE_VALUE:\n      return state.updateValue(action.payload);\n\n    default:\n      return state;\n  }\n}\nexport function messagesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Messages();\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case MessagesActions.ADD:\n      return state.addMessages(action.payload);\n\n    case MessagesActions.CLEAR:\n      return state.clearMessages(action.payload);\n\n    case MessagesActions.SUBSCRIBE:\n      return state.addSubscriptions(action.payload);\n\n    case MessagesActions.REMOVE:\n      return state.removeMessages(action.payload);\n\n    case MessagesActions.UNSUBSCRIBE:\n      return state.removeSubscriptions(action.payload);\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}