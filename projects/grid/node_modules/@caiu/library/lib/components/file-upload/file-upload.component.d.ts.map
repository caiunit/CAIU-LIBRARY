{"version":3,"file":"file-upload.component.d.ts","sources":["file-upload.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { FileUpload } from './file-upload.model';\r\nimport { Ordering } from '../../shared/ordering';\r\nexport declare const FILE_UPLOAD_ACCESSOR: any;\r\nexport declare class FileUploadComponent implements OnInit, ControlValueAccessor {\r\n    private ref;\r\n    id: string;\r\n    multiple: boolean;\r\n    ordered: boolean;\r\n    preview: boolean;\r\n    upload: EventEmitter<FileUpload | FileUpload[]>;\r\n    private onModelChange;\r\n    private onTouch;\r\n    changes$: BehaviorSubject<FileUpload>;\r\n    value: FileUpload[];\r\n    focused: FileUpload[];\r\n    ordering: Ordering<FileUpload>;\r\n    constructor(ref: ChangeDetectorRef);\r\n    readonly activeFile: FileUpload;\r\n    readonly hasUploads: boolean;\r\n    readonly showMultiple: boolean;\r\n    uploads: FileUpload[];\r\n    readonly orderedUploads: FileUpload[];\r\n    ngOnInit(): void;\r\n    add(f: FileUpload): void;\r\n    emit(): void;\r\n    moveUp(f: FileUpload): void;\r\n    moveDown(f: FileUpload): void;\r\n    remove(f?: FileUpload): void;\r\n    update(f: FileUpload): void;\r\n    registerOnChange(fn: Function): void;\r\n    registerOnTouched(fn: Function): void;\r\n    writeValue(value: FileUpload[]): void;\r\n    onChange(value: FileUpload[]): void;\r\n    onInputChange(e: any): void;\r\n    onBlur(value: FileUpload[]): void;\r\n    onFocus(value: FileUpload[]): void;\r\n    onUpload(upload: FileUpload): void;\r\n    setupReader(file: File): void;\r\n    uploadAll(uploads: FileUpload[]): void;\r\n}\r\n"]}