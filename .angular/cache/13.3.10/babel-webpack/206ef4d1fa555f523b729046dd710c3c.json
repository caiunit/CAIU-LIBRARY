{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { QueryList, ElementRef } from '@angular/core';\nimport { MatDialogClose, MatDialogRef } from '@angular/material/dialog';\nimport { DialogModel } from './dialog.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/material/toolbar\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/icon\";\n\nfunction DialogComponent_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"button\", 5)(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"close\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"mat-dialog-close\", null);\n  }\n}\n\nfunction DialogComponent_mat_dialog_actions_6_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function DialogComponent_mat_dialog_actions_6_button_1_Template_button_click_0_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r7);\n      var action_r4 = restoredCtx.$implicit;\n      var ctx_r6 = i0.ɵɵnextContext(2);\n      return ctx_r6.close(action_r4.value);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var action_r4 = ctx.$implicit;\n    var first_r5 = ctx.first;\n    var ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r3.actionWidth);\n    i0.ɵɵproperty(\"autofocus\", first_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", action_r4.label, \" \");\n  }\n}\n\nfunction DialogComponent_mat_dialog_actions_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-dialog-actions\");\n    i0.ɵɵtemplate(1, DialogComponent_mat_dialog_actions_6_button_1_Template, 2, 4, \"button\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.actions);\n  }\n}\n\nfunction DialogComponent_mat_dialog_actions_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-dialog-actions\")(1, \"button\", 8);\n    i0.ɵɵtext(2, \" Close \");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"width\", ctx_r2.actionWidth);\n  }\n}\n\nvar _c0 = [\"*\"];\nexport var DialogComponent = /*#__PURE__*/(function () {\n  var DialogComponent = /*#__PURE__*/function () {\n    function DialogComponent(dialogRef) {\n      _classCallCheck(this, DialogComponent);\n\n      this.dialogRef = dialogRef;\n      this.model = new DialogModel();\n      this.showActions = true;\n      this.showCloseAction = false;\n      this.showCloseIcon = true;\n      this.defaultActionColor = 'accent';\n    }\n\n    _createClass(DialogComponent, [{\n      key: \"actions\",\n      get: function get() {\n        return this.model.actions;\n      }\n    }, {\n      key: \"actionWidth\",\n      get: function get() {\n        var actionsCount = Math.max(this.actions.length, 1);\n        return \"\".concat(100 / actionsCount, \"%\");\n      }\n    }, {\n      key: \"closeDialogDirectives\",\n      get: function get() {\n        return this.actionElements['_results'];\n      }\n    }, {\n      key: \"closeDialogElements\",\n      get: function get() {\n        return this.closeDialogDirectives.map(function (x) {\n          return x['_elementRef'];\n        });\n      }\n    }, {\n      key: \"title\",\n      get: function get() {\n        return this.model.title;\n      }\n    }, {\n      key: \"ngAfterViewInit\",\n      value: function ngAfterViewInit() {// setTimeout(() => {\n        //   console.dir(this.actionElements);\n        //   console.dir(this.closeDialogDirectives);\n        //   console.dir(this.closeDialogElements);\n        //   console.dir(this.closeDialogElements[1]);\n        //   console.log(typeof this.closeDialogElements[1].nativeElement['click']);\n        //   this.closeDialogElements[1].nativeElement.click();\n        // }, 3000);\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {}\n    }, {\n      key: \"ngOnChanges\",\n      value: function ngOnChanges(e) {}\n    }, {\n      key: \"close\",\n      value: function close(e) {\n        this.dialogRef.close(e);\n      }\n    }]);\n\n    return DialogComponent;\n  }();\n\n  DialogComponent.ɵfac = function DialogComponent_Factory(t) {\n    return new (t || DialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef));\n  };\n\n  DialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DialogComponent,\n    selectors: [[\"iu-dialog\"]],\n    viewQuery: function DialogComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatDialogClose, 5);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.actionElements = _t);\n      }\n    },\n    inputs: {\n      model: \"model\",\n      showActions: \"showActions\",\n      showCloseAction: \"showCloseAction\",\n      showCloseIcon: \"showCloseIcon\",\n      defaultActionColor: \"defaultActionColor\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 8,\n    vars: 4,\n    consts: [[\"color\", \"primary\", \"mat-dialog-title\", \"\"], [1, \"dialog-title\"], [\"mat-button\", \"\", 3, \"mat-dialog-close\", 4, \"ngIf\"], [1, \"scrollable\"], [4, \"ngIf\"], [\"mat-button\", \"\", 3, \"mat-dialog-close\"], [\"class\", \"action\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"width\", \"autofocus\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"action\", 3, \"autofocus\", \"click\"], [\"mat-raised-button\", \"\", \"mat-dialog-close\", \"close\", \"color\", \"primary\"]],\n    template: function DialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"span\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵtemplate(3, DialogComponent_button_3_Template, 3, 1, \"button\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"mat-dialog-content\", 3);\n        i0.ɵɵprojection(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, DialogComponent_mat_dialog_actions_6_Template, 2, 1, \"mat-dialog-actions\", 4);\n        i0.ɵɵtemplate(7, DialogComponent_mat_dialog_actions_7_Template, 3, 2, \"mat-dialog-actions\", 4);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.title, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showCloseIcon);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.showActions && ctx.actions.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showCloseAction && ctx.actions.length === 0);\n      }\n    },\n    directives: [i2.MatToolbar, i1.MatDialogTitle, i3.NgIf, i1.MatDialogClose, i4.MatIcon, i1.MatDialogContent, i1.MatDialogActions, i3.NgForOf],\n    styles: [\"iu-dialog .mat-toolbar{min-height:32px}iu-dialog .mat-toolbar .dialog-title{position:relative;height:calc(100% - 8px);width:100%;margin-top:8px}iu-dialog .mat-toolbar .dialog-title button{cursor:pointer;position:absolute;right:0;top:-5px;border-radius:100%;height:42px;width:42px;min-width:36px}iu-dialog .mat-toolbar .dialog-title button:hover{font-weight:700}iu-dialog .mat-toolbar .dialog-title mat-icon{position:absolute;top:9px;right:8px;z-index:1}iu-dialog .mat-toolbar-row{height:48px}iu-dialog .mat-dialog-actions{margin-left:-24px;margin-right:-24px;color:#fff;padding:0}iu-dialog .mat-dialog-actions button{padding:12px 0}iu-dialog .mat-dialog-actions button.action:focus,iu-dialog .mat-dialog-actions button.action:active{color:#000!important}iu-dialog .mat-dialog-actions .mat-accent{color:#fff!important}\\n\"],\n    encapsulation: 2\n  });\n  return DialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}