{"version":3,"file":"storage.effects.d.ts","sources":["storage.effects.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Actions } from '@ngrx/effects';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { StorageService } from './storage.service';\r\nimport { Action } from '../store/models';\r\nexport declare class StorageEffects {\r\n    private actions$;\r\n    private service;\r\n    private state$;\r\n    actionTypes: string[];\r\n    /**\r\n     * Listens for dispatched actions, updates local storage in response.\r\n     */\r\n    onSyncLocalStorage: Observable<Action>;\r\n    /**\r\n     * Listens for dispatched actions, updates session storage in response.\r\n     */\r\n    onSyncSessionStorage: Observable<Action>;\r\n    /**\r\n     * Stores state to local storage after each action.\r\n     */\r\n    onStoreLocal: Observable<void>;\r\n    /**\r\n     * Stores state to local storage after each action.\r\n     */\r\n    onStoreSession: Observable<void>;\r\n    constructor(actions$: Actions, service: StorageService, state$: Store<any>);\r\n}\r\n"]}