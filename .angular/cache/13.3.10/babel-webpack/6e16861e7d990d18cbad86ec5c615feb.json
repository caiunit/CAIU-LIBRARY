{"ast":null,"code":"import _createClass from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Effect, ofType, Actions } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { map, filter, withLatestFrom } from 'rxjs/operators';\nimport { StorageActions } from './storage.actions';\nimport { StorageService } from './storage.service';\nimport { toPayload } from '../shared/utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"./storage.service\";\nimport * as i3 from \"@ngrx/store\";\nexport var StorageEffects = /*#__PURE__*/_createClass(function StorageEffects(actions$, service, state$) {\n  var _this = this;\n\n  _classCallCheck(this, StorageEffects);\n\n  this.actions$ = actions$;\n  this.service = service;\n  this.state$ = state$;\n  /**\r\n   * Listens for dispatched actions, updates local storage in response.\r\n   */\n\n  this.onSyncLocalStorage = this.actions$.pipe(filter(function (action) {\n    return _this.service.inLocalStorage(action.type);\n  }), map(function (action) {\n    return {\n      type: StorageActions.UPDATE_LOCAL_STORAGE,\n      payload: action\n    };\n  }));\n  /**\r\n   * Listens for dispatched actions, updates session storage in response.\r\n   */\n\n  this.onSyncSessionStorage = this.actions$.pipe(filter(function (action) {\n    return _this.service.inSessionStorage(action.type);\n  }), map(function (action) {\n    return {\n      type: StorageActions.UPDATE_SESSION_STORAGE,\n      payload: action\n    };\n  }));\n  /**\r\n   * Stores state to local storage after each action.\r\n   */\n\n  this.onStoreLocal = this.actions$.pipe(ofType(StorageActions.UPDATE_LOCAL_STORAGE), map(toPayload), withLatestFrom(this.state$, function (action, state) {\n    _this.service.storeLocal(state, action);\n  }));\n  /**\r\n   * Stores state to local storage after each action.\r\n   */\n\n  this.onStoreSession = this.actions$.pipe(ofType(StorageActions.UPDATE_SESSION_STORAGE), map(toPayload), withLatestFrom(this.state$, function (action, state) {\n    _this.service.storeSession(state, action);\n  }));\n});\n\nStorageEffects.ɵfac = function StorageEffects_Factory(t) {\n  return new (t || StorageEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.StorageService), i0.ɵɵinject(i3.Store));\n};\n\nStorageEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: StorageEffects,\n  factory: StorageEffects.ɵfac\n});\n\n__decorate([Effect(), __metadata(\"design:type\", Observable)], StorageEffects.prototype, \"onSyncLocalStorage\", void 0);\n\n__decorate([Effect(), __metadata(\"design:type\", Observable)], StorageEffects.prototype, \"onSyncSessionStorage\", void 0);\n\n__decorate([Effect({\n  dispatch: false\n}), __metadata(\"design:type\", Observable)], StorageEffects.prototype, \"onStoreLocal\", void 0);\n\n__decorate([Effect({\n  dispatch: false\n}), __metadata(\"design:type\", Observable)], StorageEffects.prototype, \"onStoreSession\", void 0);","map":null,"metadata":{},"sourceType":"module"}