{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";\nimport _inherits from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\inherits.js\";\nimport _createSuper from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createSuper.js\";\nimport _createClass from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport { Collection } from '../shared/collection';\nimport { build } from '../shared/utils';\nexport var Event = /*#__PURE__*/_createClass(function Event() {\n  _classCallCheck(this, Event);\n\n  this.emittedCount = 0;\n  this.key = '';\n  this.onAction = '';\n  this.value = null;\n});\nexport var Events = /*#__PURE__*/function (_Collection) {\n  _inherits(Events, _Collection);\n\n  var _super = _createSuper(Events);\n\n  function Events() {\n    _classCallCheck(this, Events);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Events, [{\n    key: \"actions\",\n    get: function get() {\n      return this.toArray().reduce(function (acc, event) {\n        var addValues = !event.onAction ? [] : typeof event.onAction === 'string' ? acc.indexOf(event.onAction) === -1 ? [event.onAction] : [] : event.onAction.filter(function (x) {\n          return acc.indexOf(x) === -1;\n        });\n        return [].concat(_toConsumableArray(acc), _toConsumableArray(addValues));\n      }, []);\n    }\n  }, {\n    key: \"eventsByAction\",\n    get: function get() {\n      return this.toArray().reduce(function (acc, event) {\n        if (typeof event.onAction === 'string') {\n          var val = acc[event.onAction] || [];\n          acc[event.onAction] = [].concat(_toConsumableArray(val), [event]);\n        } else {\n          event.onAction.forEach(function (actionType) {\n            var val = acc[actionType] || [];\n            acc[actionType] = [].concat(_toConsumableArray(val), [event]);\n          });\n        }\n\n        return acc;\n      }, {});\n    }\n  }, {\n    key: \"addEvent\",\n    value: function addEvent(payload) {\n      return build(Events, this.addItem(payload, payload.key));\n    }\n  }, {\n    key: \"getActionEvents\",\n    value: function getActionEvents(actionType) {\n      return this.eventsByAction[actionType];\n    }\n  }, {\n    key: \"removeEvent\",\n    value: function removeEvent(payload) {\n      return build(Events, this.removeItem(payload));\n    }\n  }, {\n    key: \"replaceEvents\",\n    value: function replaceEvents(payload) {\n      var events = this.copyItems();\n      payload.forEach(function (e) {\n        events[e.key] = e;\n      });\n      return build(Events, this, {\n        items: events\n      });\n    }\n  }, {\n    key: \"triggerEvent\",\n    value: function triggerEvent(payload) {\n      var events = this.getActionEvents(payload.type).map(function (e) {\n        return build(Event, e, {\n          value: e.handler ? e.handler(payload) : payload\n        });\n      });\n      return this.replaceEvents(events);\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(payload) {\n      var event = build(Event, this.items[payload.key], {\n        value: payload.value\n      });\n      return build(Events, this.updateItem(event, payload.key, Event));\n    }\n  }]);\n\n  return Events;\n}(Collection);\nexport var UpdateValuePayload = /*#__PURE__*/_createClass(function UpdateValuePayload() {\n  _classCallCheck(this, UpdateValuePayload);\n});\nexport var Message = /*#__PURE__*/function () {\n  function Message() {\n    _classCallCheck(this, Message);\n\n    this.action = '';\n    this.channel = '';\n    this.message = '';\n  }\n\n  _createClass(Message, [{\n    key: \"id\",\n    get: function get() {\n      return this.channel;\n    },\n    set: function set(value) {\n      this.channel = value;\n    }\n  }]);\n\n  return Message;\n}();\nexport var MessageSubscription = /*#__PURE__*/_createClass(function MessageSubscription() {\n  _classCallCheck(this, MessageSubscription);\n\n  this.action = '';\n  this.channel = '';\n});\nexport var Messages = /*#__PURE__*/function (_Collection2) {\n  _inherits(Messages, _Collection2);\n\n  var _super2 = _createSuper(Messages);\n\n  function Messages() {\n    var _this;\n\n    _classCallCheck(this, Messages);\n\n    _this = _super2.call(this, Message);\n    _this.subscriptions = [];\n    return _this;\n  }\n\n  _createClass(Messages, [{\n    key: \"addMessages\",\n    value: function addMessages(data) {\n      return build(Messages, this, this.update(data));\n    }\n  }, {\n    key: \"clearMessages\",\n    value: function clearMessages(data) {\n      var channelNames = Array.isArray(data) ? data.map(function (x) {\n        return x.channel;\n      }) : [data.channel];\n      return build(Messages, this, this.removeMessages(channelNames));\n    }\n  }, {\n    key: \"removeMessages\",\n    value: function removeMessages(channelNames) {\n      return build(Messages, channelNames.reduce(function (acc, id) {\n        return acc.delete(id);\n      }, this));\n    }\n  }, {\n    key: \"addSubscription\",\n    value: function addSubscription(arr, data) {\n      return [].concat(_toConsumableArray(arr.filter(function (x) {\n        return !(x.action === data.action && x.channel === data.channel);\n      })), [data]);\n    }\n  }, {\n    key: \"addSubscriptions\",\n    value: function addSubscriptions(data) {\n      var _this2 = this;\n\n      var subscriptions = Array.isArray(data) ? data.reduce(function (acc, x) {\n        return _this2.addSubscription(acc, x);\n      }, this.subscriptions) : this.addSubscription(this.subscriptions, data);\n      return build(Messages, this, {\n        subscriptions: subscriptions\n      });\n    }\n  }, {\n    key: \"removeSubscription\",\n    value: function removeSubscription(arr, data) {\n      return arr.filter(function (x) {\n        return !(x.action === data.action && x.channel === data.channel);\n      });\n    }\n  }, {\n    key: \"removeSubscriptions\",\n    value: function removeSubscriptions(data) {\n      var _this3 = this;\n\n      var subscriptions = Array.isArray(data) ? data.reduce(function (acc, x) {\n        return _this3.addSubscription(acc, x);\n      }, this.subscriptions) : this.addSubscription(this.subscriptions, data);\n      var channels = Array.isArray(data) ? data.map(function (x) {\n        return x.channel;\n      }) : [data.channel];\n      var items = this.asArray; // TODO: filter out messages from unsubscribed channels\n\n      return build(Messages, {\n        items: items,\n        subscriptions: subscriptions\n      });\n    }\n  }]);\n\n  return Messages;\n}(Collection);","map":null,"metadata":{},"sourceType":"module"}