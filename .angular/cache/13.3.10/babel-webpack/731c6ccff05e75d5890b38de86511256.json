{"ast":null,"code":"import _createClass from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport _classCallCheck from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Effect, Actions } from '@ngrx/effects';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ErrorActions } from './errors.actions';\nimport { ErrorsService } from './errors.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"./errors.service\";\nexport var ErrorEffects = /*#__PURE__*/_createClass(function ErrorEffects(actions$, service) {\n  _classCallCheck(this, ErrorEffects);\n\n  this.actions$ = actions$;\n  this.service = service;\n  /**\r\n   * Listens for thrown errors and handles them accordingly\r\n   */\n\n  this.handleError$ = this.actions$.pipe(filter(function (action) {\n    return action.type === ErrorActions.THROW_ERROR;\n  }), map(function (data) {\n    return {\n      type: ErrorActions.HANDLE_ERROR\n    };\n  }));\n});\n\nErrorEffects.ɵfac = function ErrorEffects_Factory(t) {\n  return new (t || ErrorEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.ErrorsService));\n};\n\nErrorEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ErrorEffects,\n  factory: ErrorEffects.ɵfac\n});\n\n__decorate([Effect(), __metadata(\"design:type\", Observable)], ErrorEffects.prototype, \"handleError$\", void 0);","map":null,"metadata":{},"sourceType":"module"}