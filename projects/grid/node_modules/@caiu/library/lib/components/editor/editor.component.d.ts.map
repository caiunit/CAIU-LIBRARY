{"version":3,"file":"editor.component.d.ts","sources":["editor.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnDestroy, OnInit, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material';\r\nimport { Subscription } from 'rxjs';\r\nexport declare const EDITOR_ACCESSOR: any;\r\nexport declare class EditorComponent implements OnInit, OnDestroy, AfterViewInit, ControlValueAccessor {\r\n    dialog: MatDialog;\r\n    private ref;\r\n    type: 'basic' | 'full';\r\n    elementId: string;\r\n    expanded: boolean;\r\n    height: number;\r\n    plugins: string[];\r\n    skinUrl: string;\r\n    templates: {\r\n        title: string;\r\n        content: string;\r\n    }[];\r\n    changes: EventEmitter<any>;\r\n    private onModelChange;\r\n    private onTouch;\r\n    _value: string;\r\n    focused: string;\r\n    dialogRef: Subscription;\r\n    editorRef: any;\r\n    constructor(dialog: MatDialog, ref: ChangeDetectorRef);\r\n    value: string;\r\n    readonly basic: boolean;\r\n    readonly full: boolean;\r\n    readonly config: any;\r\n    readonly configBasic: any;\r\n    readonly configFull: any;\r\n    readonly hasValue: boolean;\r\n    readonly showExpand: boolean;\r\n    ngOnInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    clear(): void;\r\n    expand(e: any): void;\r\n    registerOnChange(fn: Function): void;\r\n    registerOnTouched(fn: Function): void;\r\n    writeValue(value: string): void;\r\n    onChange(value: string): void;\r\n    onUpdate(value: string): void;\r\n    onKeyup(value: string): void;\r\n    onBlur(value: string): void;\r\n    onFocus(value: string): void;\r\n    openDialog(config: any): void;\r\n    closeDialog(value: string): void;\r\n    setContent(value: string): void;\r\n}\r\n"]}