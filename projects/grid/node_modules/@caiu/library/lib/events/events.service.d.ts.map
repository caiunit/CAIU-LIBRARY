{"version":3,"file":"events.service.d.ts","sources":["events.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Store } from '@ngrx/store';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { HttpAction } from '../http/http.models';\r\nimport { Action } from '../store/models';\r\nexport declare class EventsService {\r\n    store: Store<any>;\r\n    eventIndex: number;\r\n    events: Event[];\r\n    constructor(store: Store<any>);\r\n    readonly eventKey: string;\r\n    addEvent(actionType: string, handler?: (action: Action) => any): string;\r\n    dispatch(action: HttpAction, handler?: (action: Action) => any): Observable<any>;\r\n    dispatchHttpAction(action: HttpAction, handler?: (action: Action) => any): Observable<any>;\r\n    removeEvent(eventKey: string): void;\r\n    subscribe(action: string, handler: (e: any) => void): Subscription;\r\n    take(n: number, actionType: string, handler?: (action: Action) => any): Observable<any>;\r\n    takeFrom(n: number, actions: string[], handler?: (action: Action) => any): Observable<any>;\r\n    takeOne(actionType: string, handler?: (action: Action) => any): Observable<any>;\r\n}\r\n"]}