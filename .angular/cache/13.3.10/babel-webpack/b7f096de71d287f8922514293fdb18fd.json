{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"C:\\\\Users\\\\dsalgado.contr\\\\source\\\\Workspaces\\\\CAIU-LIBRARY\\\\CAIU-LIBRARY\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { EventEmitter, forwardRef } from '@angular/core';\nimport { FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDatepicker } from '@angular/material/datepicker';\nimport { dateFormatValidator, noWeekendDaysValidator } from '../../shared/date';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/form-field\";\nimport * as i2 from \"@angular/material/input\";\nimport * as i3 from \"@angular/material/datepicker\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../shared/date-mask.directive\";\nimport * as i6 from \"@angular/common\";\nvar _c0 = [\"picker\"];\n\nfunction DatepickerComponent_mat_error_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" This date is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DatepickerComponent_mat_error_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Please enter a valid date using \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"mm/dd/yyyy\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4, \" format. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DatepickerComponent_mat_error_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.dateInput.errors[\"weekend\"], \" \");\n  }\n}\n\nexport var DATEPICKER_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return DatepickerComponent;\n  }),\n  multi: true\n};\nexport var DatepickerComponent = /*#__PURE__*/(function () {\n  var DatepickerComponent = /*#__PURE__*/function () {\n    function DatepickerComponent() {\n      _classCallCheck(this, DatepickerComponent);\n\n      this.placeholder = 'Choose a date';\n      this.required = false;\n      this.startView = 'month';\n      this.selectedChanged = new EventEmitter();\n      this.dateInput = new FormControl('');\n    }\n\n    _createClass(DatepickerComponent, [{\n      key: \"value\",\n      get: function get() {\n        return this._value;\n      },\n      set: function set(val) {\n        this._value = val;\n      }\n    }, {\n      key: \"registerOnChange\",\n      value: function registerOnChange(fn) {\n        this.onModelChange = fn;\n      }\n    }, {\n      key: \"registerOnTouched\",\n      value: function registerOnTouched(fn) {\n        this.onTouch = fn;\n      }\n    }, {\n      key: \"writeValue\",\n      value: function writeValue(value) {\n        this.value = value;\n      }\n    }, {\n      key: \"onChange\",\n      value: function onChange(value) {\n        this.value = value.value;\n\n        if (this.onModelChange) {\n          this.onModelChange(value.value);\n        }\n      }\n    }, {\n      key: \"id\",\n      get: function get() {\n        return this.datepicker.id;\n      }\n    }, {\n      key: \"opened\",\n      get: function get() {\n        return this.datepicker.opened;\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        this.startAt = this.value;\n\n        if (this.filter != null) {\n          this.dateFilter = this.filter;\n        } else {\n          this.dateFilter = null;\n        }\n\n        this.dateInput.setValidators([dateFormatValidator(), noWeekendDaysValidator()]);\n        this.dateInput.setValue(this.value);\n      }\n    }, {\n      key: \"changeSelected\",\n      value: function changeSelected(date) {\n        this.onChange(date);\n        this.selectedChanged.emit(date.value);\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        this.datepicker.close();\n      }\n    }, {\n      key: \"open\",\n      value: function open() {\n        this.datepicker.open();\n      }\n    }]);\n\n    return DatepickerComponent;\n  }();\n\n  DatepickerComponent.ɵfac = function DatepickerComponent_Factory(t) {\n    return new (t || DatepickerComponent)();\n  };\n\n  DatepickerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DatepickerComponent,\n    selectors: [[\"iu-datepicker\"]],\n    viewQuery: function DatepickerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        var _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.datepicker = _t.first);\n      }\n    },\n    inputs: {\n      filter: \"filter\",\n      min: \"min\",\n      max: \"max\",\n      placeholder: \"placeholder\",\n      required: \"required\",\n      startAt: \"startAt\",\n      startView: \"startView\",\n      touchUi: \"touchUi\",\n      value: \"value\"\n    },\n    outputs: {\n      selectedChanged: \"selectedChanged\"\n    },\n    features: [i0.ɵɵProvidersFeature([DATEPICKER_ACCESSOR])],\n    decls: 8,\n    vars: 15,\n    consts: [[\"matInput\", \"\", \"dateMask\", \"\", 3, \"required\", \"placeholder\", \"matDatepicker\", \"matDatepickerFilter\", \"min\", \"max\", \"value\", \"formControl\", \"dateChange\"], [4, \"ngIf\"], [\"matSuffix\", \"\", 3, \"for\"], [3, \"startAt\", \"startView\", \"touchUi\"], [\"picker\", \"\"]],\n    template: function DatepickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-form-field\")(1, \"input\", 0);\n        i0.ɵɵlistener(\"dateChange\", function DatepickerComponent_Template_input_dateChange_1_listener($event) {\n          return ctx.changeSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, DatepickerComponent_mat_error_2_Template, 2, 0, \"mat-error\", 1);\n        i0.ɵɵtemplate(3, DatepickerComponent_mat_error_3_Template, 5, 0, \"mat-error\", 1);\n        i0.ɵɵtemplate(4, DatepickerComponent_mat_error_4_Template, 2, 1, \"mat-error\", 1);\n        i0.ɵɵelement(5, \"mat-datepicker-toggle\", 2)(6, \"mat-datepicker\", 3, 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        var _r3 = i0.ɵɵreference(7);\n\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"required\", ctx.required)(\"placeholder\", ctx.placeholder)(\"matDatepicker\", _r3)(\"matDatepickerFilter\", ctx.dateFilter)(\"min\", ctx.min)(\"max\", ctx.max)(\"value\", ctx.value)(\"formControl\", ctx.dateInput);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dateInput.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dateInput.hasError(\"format\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dateInput.hasError(\"weekend\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r3);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"startAt\", ctx.startAt)(\"startView\", ctx.startView)(\"touchUi\", ctx.touchUi);\n      }\n    },\n    directives: [i1.MatFormField, i2.MatInput, i3.MatDatepickerInput, i4.DefaultValueAccessor, i5.DateMaskDirective, i4.RequiredValidator, i4.NgControlStatus, i4.FormControlDirective, i6.NgIf, i1.MatError, i3.MatDatepickerToggle, i1.MatSuffix, i3.MatDatepicker],\n    styles: [\".mat-input-container[_ngcontent-%COMP%]{float:left}\"],\n    changeDetection: 0\n  });\n  return DatepickerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}