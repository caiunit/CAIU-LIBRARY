{"version":3,"file":"daterange.component.d.ts","sources":["daterange.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ChangeDetectorRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { DatepickerComponent } from '../datepicker.component';\r\nimport { DateRange } from '../../../shared/date';\r\nexport declare const DATERANGE_ACCESSOR: any;\r\nexport declare class DaterangeComponent implements ControlValueAccessor {\r\n    private changeDetectorRef;\r\n    inline: boolean;\r\n    min: Date;\r\n    max: Date;\r\n    startAt: Date;\r\n    startLabel: string;\r\n    endLabel: string;\r\n    startView: any;\r\n    touchUi: any;\r\n    startDateChanged: EventEmitter<Date>;\r\n    endDateChanged: EventEmitter<Date>;\r\n    startDatepicker: DatepickerComponent;\r\n    endDatepicker: DatepickerComponent;\r\n    private onModelChange;\r\n    private onTouch;\r\n    _value: DateRange;\r\n    focused: DateRange;\r\n    constructor(changeDetectorRef: ChangeDetectorRef);\r\n    value: DateRange;\r\n    readonly startDateId: string;\r\n    readonly startDateOpened: boolean;\r\n    readonly endDateId: string;\r\n    readonly endDateOpened: boolean;\r\n    startDateValue: Date;\r\n    endDateValue: Date;\r\n    changeStartDate(date: Date): void;\r\n    closeStartDate(): void;\r\n    openStateDate(): void;\r\n    changeEndDate(date: Date): void;\r\n    closeEndDate(): void;\r\n    openEndDate(): void;\r\n    registerOnChange(fn: Function): void;\r\n    registerOnTouched(fn: Function): void;\r\n    writeValue(value: DateRange): void;\r\n    onChange(value: DateRange): void;\r\n    onBlur(value: DateRange): void;\r\n    onFocus(value: DateRange): void;\r\n}\r\n"]}